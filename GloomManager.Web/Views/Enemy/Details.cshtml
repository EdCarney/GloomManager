@model GloomManager.Web.Models.EnemyFormViewModel

@{
    ViewData["Title"] = "Details";
}

<div>
    <h2>
        Level&nbsp;@Html.DisplayFor(model => model.Enemy.Level) |
        @Html.DisplayFor(model => model.Enemy.Eliteness) |
        @Html.DisplayFor(model => model.Enemy.Name)
    </h2>
</div>

<hr />

@using (Html.BeginForm(FormMethod.Get))
{
    @Html.HiddenFor(model => model.Enemy.Name)

    <div class="form-row mb-3">
        <div class="btn-group btn-group-toggle" data-toggle="buttons">
            <label class="btn btn-secondary" id="elitenessBtn-standard" for="eliteness">
                <input type="radio" name="eliteness" id="elitenessInput-standard" autocomplete="off" value="standard"> Standard
            </label>
            <label class="btn btn-secondary" id="elitenessBtn-elite" for="eliteness">
                <input type="radio" name="eliteness" id="elitenessInput-elite" autocomplete="off" value="elite"> Elite
            </label>
        </div>

        <div class="input-group col-md-4">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon1">Level</span>
            </div>
            <input type="number" name="Level" value="@Model.Enemy.Level" class="form-control" aria-describedby="basic-addon1">
        </div>

        <input type="submit" value="Search" class="btn btn-primary" />
    </div>
}

<partial name="_StatDetails" model="Model.Enemy" />

<br />

<div>
    <a class="btn btn-info" asp-action="UniqueIndex">Back to List</a>
</div>

<script>
    let eliteness = '@Model.Enemy.Eliteness.ToString()';
    (function ($) {
        if (eliteness.toLowerCase() === "elite") {
            $("#elitenessBtn-elite").addClass("active");
            $("#elitenessInput-elite").prop("checked", true);
        }
        else {
            $("#elitenessBtn-standard").addClass("active");
            $("#elitenessInput-standard").prop("checked", true);
        }
    })(jQuery)
</script>